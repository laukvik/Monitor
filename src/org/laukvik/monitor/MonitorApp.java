/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MonitorApp.java
 *
 * Created on Sep 6, 2011, 9:24:46 PM
 */
package org.laukvik.monitor;

import java.util.List;

/**
 *
 * @author morten
 */
public class MonitorApp extends javax.swing.JFrame implements SensorListener {

    List<SensorGroup>groups;
    SensorTable table;
    SensorService sm;
    
    /** Creates new form MonitorApp */
    public MonitorApp() {
        initComponents();
        sm = new SensorService();
        pack();
        loadGroups();
        setSize( 400, 400 );
        setVisible( true );
    }
    
    public void loadGroups(){
        groups = sm.listGroups();
        for (SensorGroup g : groups){
            for (Sensor s : g.getSensorList()){
                s.addSensorListener( this );
            }
        }
        for (SensorGroup group : groups){
            sensorTabbedPane1.addTab( group.getTitle(), new SensorGroupPanel(group) );
        }
    }

    @Override
    public void statusChanged(SensorEvent evt) {
        System.out.println( "SensorChagned: " + evt.sensor.getValue() );
        sm.createHistory( evt.sensor );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sensorTabbedPane1 = new org.laukvik.monitor.SensorTabbedPane();
        sensorToolbar1 = new org.laukvik.monitor.SensorToolbar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(sensorTabbedPane1, java.awt.BorderLayout.CENTER);

        sensorToolbar1.setRollover(true);
        getContentPane().add(sensorToolbar1, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
//        MonitorPU mpu;
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MonitorApp().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.laukvik.monitor.SensorTabbedPane sensorTabbedPane1;
    private org.laukvik.monitor.SensorToolbar sensorToolbar1;
    // End of variables declaration//GEN-END:variables

}
